name: ProjectRock - MSSQL PaaS
version: 1.8
description: MSSQL PaaS Request
formatVersion: 1
inputs:
  Platform:
    type: string
    oneOf:
      - title: AWS
        const: 'platform:aws'
      - title: Azure
        const: 'platform:azure'
    default: 'platform:aws'
  SQLServerName:
    type: string
    default: projectrock-db
    title: DB Server Name
  SQLInstanceName:
    type: string
    default: prod
    title: DB Instance Name
  SQLAdminAccount:
    type: string
    default: projectrock
    title: DB Admin Account
  SQLAdminPassword:
    type: string
    encrypted: true
    title: DB Admin Password
resources:
  Web-Server:
    type: Cloud.Machine
    properties:
      os: UBUNTU
      servertuype: WEB
      image: ubuntu1604
      flavor: small
      DNS: '${env.deploymentName}'
      networks:
        - network: '${resource["Public-Network"].id}'
          assignPublicIpAddress: true
      cloudConfig:
        repo_update: true
        repo_upgrade: all
        package_update: true
        package_upgrade: all
        packages:
          - apache2
          - libapache2-mod-php7.4
          - git-core
        users:
          - name: projectrock
            ssh-authorized-keys:
              - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmKkDl1xyE8FJjxDkq61V3Brdh4dtEgWnyLYuy3HxyguFz7wj7R4fheNlK4p6vYTWQk4AqlY3Fw2kzcZl2iuTmUMtFhllD236o7/aaVNw5HJKHp0B9A6LBpYDxSwPuWdotQPVoH7Vp/Ylimo1iVQOIh8t3tBClD/GatFIyw/OyrSpw6ncyw3RYkfC2ITlaCzFKGXv1weZNFK/rtyFcECvK1l4R0qLsR5CvQ/x9hFocRocMeqZ9fNV/+0Qws6f9IXKxYvBuDgMG41RFlsOsmzPNh3OQHy7VhIdeDl18aynUCopZIvM2siUAevlTrb01VOhME8Yr2CecGUI5o8aEw4R7
            sudo:
              - 'ALL=(ALL) NOPASSWD:ALL'
            groups: sudo
            shell: /bin/bash
        runcmd:
          - 'add-apt-repository ppa:ondrej/php -y'
          - 'curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -'
          - 'curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list'
          - 'curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -'
          - 'curl https://packages.microsoft.com/config/ubuntu/18.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list'
          - apt-get update
          - ACCEPT_EULA=Y apt-get -y install msodbcsql17
          - ACCEPT_EULA=y DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends mssql-tools 
          - apt-get install php7.4 unixodbc-dev php-dev php-xml php-pear -y --allow-unauthenticated
          - source ~/.bashrc
          - pecl install sqlsrv
          - pecl install pdo_sqlsrv
          - a2dismod php7.0
          - a2dismod mpm_event
          - a2enmod mpm_prefork
          - a2enmod php7.4
          - echo "extension=sqlsrv.so" >> /etc/php/7.4/apache2/php.ini
          - echo "extension=pdo_sqlsrv.so" >> /etc/php/7.4/apache2/php.ini
          - printf "; priority=20\nextension=sqlsrv.so\n" > /etc/php/7.4/mods-available/sqlsrv.ini
          - printf "; priority=30\nextension=pdo_sqlsrv.so\n" > /etc/php/7.4/mods-available/pdo_sqlsrv.ini
          - phpenmod -v 7.4 sqlsrv pdo_sqlsrv
          - cd /var/www/html
          - rm index.html
          - 'git clone https://github.com/sndrmn/ProjectRockMSSQL.git .'
          - systemctl restart apache2
          - ln -sfn /opt/mssql-tools/bin/sqlcmd /usr/bin/sqlcmd
  AWS-RDS-MSSQL:
    type: Cloud.Service.AWS.DB.Instance
    properties:
      region: ap-southeast-2
      account: SDDC ANZ AWS
      instance_class: db.t3.xlarge
      license_model: license-included
      identifier: '${input.SQLServerName}'
      port: 1433
      engine: sqlserver-se
      multi_az: false
      password: '${input.SQLAdminPassword}'
      username: '${input.SQLAdminAccount}'
      storage_type: gp2
      engine_version: 14.00.3281.6.v1
      allocated_storage: 100
      availability_zone: ap-southeast-2b
      db_subnet_group_name: projectrock-db-subnet
      vpc_security_group_ids:
        - sg-09b03d1ee81452010
      skip_final_snapshot: true
      count: '${input.Platform == "platform:aws" ? 1 : 0}'
  Azure-SQLDB:
    type: Cloud.Terraform.Configuration
    properties:
      count: '${input.Platform == "platform:azure" ? 1 : 0}'
      terraformVersion: 0.13.2
      variables:
        rgname: '${env.deploymentName}'
        SQLServerName: '${input.SQLServerName}'
        SQLAdminAccount: '${input.SQLAdminAccount}'
        SQLAdminPassword: '${input.SQLAdminPassword}'
        SQLInstanceName: '${input.SQLInstanceName}'
      providers:
        - name: azurerm
          # List of available cloud zones: SDDC ANZ Azure/australiaeast
          cloudZone: SDDC ANZ Azure/australiaeast
      configurationSource:
        repositoryId: 374f2c12-cd0b-415c-a9be-f29390d92c7b
        commitId: 0ad8beb8a9d943f332fc5626354dc3d9383f415c
        sourceDirectory: azure-sqldb
  Public-Network:
    type: Cloud.Network
    properties:
      networkType: existing
      constraints:
        - tag: 'function:public'
        - tag: '${input.Platform}'